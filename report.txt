Geni project report 
Model Part

The model layer is responsible for the image recognition task. The core of the model layer is a pre-trained AlexNet. On a high level, the layer accept image data, and pass the data to the AlexNet. Then AlexNet would output the predicted label for the corresponding input image. 

AlexNet

AlexNet is a particular kind of a convolutional neural network, designed by Alex Krizhevsky in collaboration with Ilya Sutskever and Geoffrey Hinton. Although AlexNet was not the first CNN that won image recognition contest, it showed the potential of CNN in computer vision and sparked various researches in CNN on computer vision tasks. In 2012, the AlexNet beat other state-of-the-art image recognition model by a large margin in ImageNet Large Scale Visual Recognition Challenge. 

Implementation

AlexNet refers to a specific architecture of convolutional neural network, many existing frameworks could build AlexNet or directly download the architecture from their repository. In this project we choose PyTorch to implement AlexNet. PyTorc is an open source machine learning library which has gain great popularity in machine learning community. PyTorch provides higher level abstraction for various essential modules in deep learning models to levitate to the burden of the user while implementing different models. PyTorch also provides extensive models available to use. In our project, we directly download a pre-trained AlexNet from torchvision, a module of PyTorch. 

Classification range

Many convolutional neural networks conduct the prediction as a statistical machine, so as AlexNet. The model can only make meaningful predictions on the classes it has been trained on before. If the model is asked to predict classes which do not present in the training dataset, the prediction would not be correct, but the model has a higher chance to classify them as classes in the training set with highest visual similarities. 

The AlexNet we are using has been trained on ImageNet dataset, a large scale dataset containing over 20,000 categories with over 14 million images. However, our AlexNet is pre-trained on a subset of ImageNet with only 1000 specific classes, the ILSVR contest format. So the model would only reliable (to some extent) predict these 1000 classes. 

Workflow 

Upon receiving a request, the incoming binary image object would be received by the model layer. Then PyTorch would create a Tensor object for the image, and resize and normalize the image. After that the tensor would be passed to the convolutional neural network. At the end layer of the AlexNet, a float array of 1000 entries would be generated. The index of the entry with largest value would be retrieved, and would be used as the index for an image-label text file. The predicted label (class) would then be retrieved. The entry value would also be converted into the confidence of the prediction (in the probability distribution among the 1000 classes, the probability for the predicted class) via Softmax function. The final output sent back to the socket is a string with the format predicted class + confidence.  
